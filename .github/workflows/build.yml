name: build

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    
    strategy:
        fail-fast: false
        matrix:
            os: [ubuntu-latest, ubuntu-20.04, macos-13, macos-latest, windows-latest]
            qts: [6.2.0, 5.15.2]
            include:
              - os: ubuntu-latest
                prefix: bin/examples/
              - os: ubuntu-20.04
                prefix: bin/examples/
              - os: macos-13
                prefix: bin/examples/
              - os: macos-latest
                prefix: bin/examples/
              - os: windows-latest
                prefix: bin/examples/Release/
                suffix: .exe
            exclude:
              - os: macos-latest
                qts: 5.15.2

    steps:
    - uses: actions/checkout@v2

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: ${{ matrix.qts }}

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DINCLUDE_TESTS=ON -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: ${{github.workspace}}/build

  cxx_standards:
    runs-on: ubuntu-latest
    
    strategy:
        fail-fast: false
        matrix:
            cxxs: [11, 14, 17, 20, 23]
    
    env:
      prefix: bin/examples/

    steps:
      - uses: actions/checkout@v2

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source 
        # and build directories, but this is only available with CMake 3.13 and higher.  
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake $GITHUB_WORKSPACE -DCMAKE_CXX_STANDARD=${{ matrix.cxxs }} -DINCLUDE_TESTS=ON -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact-2
          path: ${{github.workspace}}/build
        